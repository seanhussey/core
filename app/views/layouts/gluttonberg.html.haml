!!!
%html{:lang => "en"}
  %head
    %meta{:charset => "utf-8"}
      %title
        = "#{website_title} #{@window_title.blank? ? '' : ' : ' + @window_title}"
      %meta{:content => "width=device-width, initial-scale=1.0", :name => "viewport"}
      %meta{:content => "Updating your site is a piece of cake", :name => "description"}
      %meta{:content => "Freerange Future", :name => "author"}
      = csrf_meta_tag

      = stylesheet_link_tag "gluttonberg", :media => "all"
      = javascript_include_tag "gluttonberg",  :charset => "utf-8"

      = custom_javascript_include_tag
      = custom_stylesheet_link_tag

      /[if lt IE 9]
        = javascript_include_tag "gb_html5"

  %body
    .navbar.navbar-fixed-top
      .navbar-inner
        .container-fluid
          %a.btn.btn-navbar{"data-target" => ".nav-collapse", "data-toggle" => "collapse"}
            %span.icon-bar
            %span.icon-bar
            %span.icon-bar
          = backend_logo("/assets/gb_logo_top.png" , {:height => "30px"})
          %a.brand{:href => admin_root_path}
            = website_title
          .nav-collapse
            %ul.nav.pull-right
              %li
                %a{:href => "/admin/logout"}
                  Logout

    .navbar-main
      %ul.nav
        - for entry in Gluttonberg::Components.main_nav_entries
          - if entry[2][:enabled].blank? || entry[2][:enabled] == true || (eval(entry[2][:enabled]) != false)
            - if (entry[2][:only_for_super_admin].blank? || entry[2][:only_for_super_admin]==false || (entry[2][:only_for_super_admin]==true && session.user.is_super_admin) )
              - active = false
              - enabled = true
              - case entry[1]
                - when "/admin/"
                  - active = params[:controller].include?('gluttonberg/admin/main')
                - when "/admin/pages"
                  - active = (params[:controller].include?('gluttonberg/admin/content') || (( Gluttonberg::Components.nav_entries.collect{|c| c[1]}).include?(controller_name.to_sym) ))
                - when "/admin/assets/all/page/1"
                  - active = params[:controller].include?('gluttonberg/admin/asset_library')
                - when "/admin/membership/members"
                  - active  = /^\/admin\/membership/
                  - enabled = Rails.configuration.enable_members
                - when "/admin/configurations"
                  - active = params[:controller].include?('gluttonberg/admin/settings/')
                - else
                  - unless @menu_section_name.blank?
                    - active = (@menu_section_name == entry[0])
                  - else
                    - active = (( Gluttonberg::Components.nav_entries(entry[0]).collect{|c| c[1]}).include?(controller_name.to_sym) )
              - if enabled && (entry[2][:can_model_name].blank? || can?(:manage , eval(entry[2][:can_model_name])))
                %li{:class => "mainNavLi"}
                  = active_link_to(entry[0], url_for(entry[1]), {:id => (entry[0].to_s.underscore).gsub(/\s/, '_') + "Nav" , :title => entry[0], :active => active } )


    .container-fluid
      - unless flash.blank?
        = render "/layouts/flash_messages", :locals => {:close_button => true}
      = yield

      %hr
      %footer
        %p
          &copy;
          %a{:href => "http://freerangefuture.com", :target => "_blank"}
            Freerange Future
          #{Time.now.year}
